// schema.prisma

// Define the Prisma client generator to generate client code
generator client {
  provider = "prisma-client-js"
}

// Define the database connection details
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Define the User model
model User {
  id                 Int                  @id @default(autoincrement())
  username           String
  email              String               @unique
  password           String
  role               String               @default("Personal")
  verified           Boolean              @default(false)
  verificationToken  String?
  accounts           Account[] // Establish a one-to-many relationship with Account
  PasswordResetToken PasswordResetToken[]
  BudgetCategory     BudgetCategory[]
  Household          Household?           @relation(fields: [householdId], references: [id])
  householdId        Int?
}

model PasswordResetToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  expiresAt DateTime @db.Timestamptz()
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
}

// Define the Account model
model Account {
  id              Int           @id @default(autoincrement())
  account_name    String
  account_number  String
  initial_balance Float
  user_id         Int
  user            User          @relation(fields: [user_id], references: [id]) // Define the relationship with User
  transactions    Transaction[] // Establish a one-to-many relationship with Transaction
}

// Define the Transaction model
model Transaction {
  id               Int             @id @default(autoincrement())
  date             DateTime        @db.Timestamptz()
  amount           Float
  type             String
  budgetCategory   String?
  description      String?
  account_id       Int
  account          Account         @relation(fields: [account_id], references: [id]) // Define the relationship with Account
  BudgetCategory   BudgetCategory? @relation(fields: [budgetCategoryId], references: [id])
  budgetCategoryId Int?
}

model BudgetCategory {
  id             Int           @id @default(autoincrement())
  budgetCategory String
  amount         Float
  user_id        Int // Reference the User
  user           User          @relation(fields: [user_id], references: [id])
  transactions   Transaction[] // Establish a relationship with Transaction
}

model Household {
  id      Int    @id @default(autoincrement())
  members User[] // Define a many-to-many relationship with users
}
